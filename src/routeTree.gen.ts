/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as LeaguesRouteImport } from './routes/leagues'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TLeagueRouteImport } from './routes/t.$league'
import { Route as TLeagueSubmitRouteImport } from './routes/t.$league/submit'
import { Route as TLeagueMatchesRouteImport } from './routes/t.$league/matches'
import { Route as TLeagueLeaderboardRouteImport } from './routes/t.$league/leaderboard'
import { Route as TLeagueMatchMatchIdEditRouteImport } from './routes/t.$league/match.$matchId/edit'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LeaguesRoute = LeaguesRouteImport.update({
  id: '/leagues',
  path: '/leagues',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TLeagueRoute = TLeagueRouteImport.update({
  id: '/t/$league',
  path: '/t/$league',
  getParentRoute: () => rootRouteImport,
} as any)
const TLeagueSubmitRoute = TLeagueSubmitRouteImport.update({
  id: '/submit',
  path: '/submit',
  getParentRoute: () => TLeagueRoute,
} as any)
const TLeagueMatchesRoute = TLeagueMatchesRouteImport.update({
  id: '/matches',
  path: '/matches',
  getParentRoute: () => TLeagueRoute,
} as any)
const TLeagueLeaderboardRoute = TLeagueLeaderboardRouteImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => TLeagueRoute,
} as any)
const TLeagueMatchMatchIdEditRoute = TLeagueMatchMatchIdEditRouteImport.update({
  id: '/match/$matchId/edit',
  path: '/match/$matchId/edit',
  getParentRoute: () => TLeagueRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/leagues': typeof LeaguesRoute
  '/login': typeof LoginRoute
  '/t/$league': typeof TLeagueRouteWithChildren
  '/t/$league/leaderboard': typeof TLeagueLeaderboardRoute
  '/t/$league/matches': typeof TLeagueMatchesRoute
  '/t/$league/submit': typeof TLeagueSubmitRoute
  '/t/$league/match/$matchId/edit': typeof TLeagueMatchMatchIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/leagues': typeof LeaguesRoute
  '/login': typeof LoginRoute
  '/t/$league': typeof TLeagueRouteWithChildren
  '/t/$league/leaderboard': typeof TLeagueLeaderboardRoute
  '/t/$league/matches': typeof TLeagueMatchesRoute
  '/t/$league/submit': typeof TLeagueSubmitRoute
  '/t/$league/match/$matchId/edit': typeof TLeagueMatchMatchIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/leagues': typeof LeaguesRoute
  '/login': typeof LoginRoute
  '/t/$league': typeof TLeagueRouteWithChildren
  '/t/$league/leaderboard': typeof TLeagueLeaderboardRoute
  '/t/$league/matches': typeof TLeagueMatchesRoute
  '/t/$league/submit': typeof TLeagueSubmitRoute
  '/t/$league/match/$matchId/edit': typeof TLeagueMatchMatchIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/leagues'
    | '/login'
    | '/t/$league'
    | '/t/$league/leaderboard'
    | '/t/$league/matches'
    | '/t/$league/submit'
    | '/t/$league/match/$matchId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/leagues'
    | '/login'
    | '/t/$league'
    | '/t/$league/leaderboard'
    | '/t/$league/matches'
    | '/t/$league/submit'
    | '/t/$league/match/$matchId/edit'
  id:
    | '__root__'
    | '/'
    | '/leagues'
    | '/login'
    | '/t/$league'
    | '/t/$league/leaderboard'
    | '/t/$league/matches'
    | '/t/$league/submit'
    | '/t/$league/match/$matchId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LeaguesRoute: typeof LeaguesRoute
  LoginRoute: typeof LoginRoute
  TLeagueRoute: typeof TLeagueRouteWithChildren
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/leagues': {
      id: '/leagues'
      path: '/leagues'
      fullPath: '/leagues'
      preLoaderRoute: typeof LeaguesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/t/$league': {
      id: '/t/$league'
      path: '/t/$league'
      fullPath: '/t/$league'
      preLoaderRoute: typeof TLeagueRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/t/$league/submit': {
      id: '/t/$league/submit'
      path: '/submit'
      fullPath: '/t/$league/submit'
      preLoaderRoute: typeof TLeagueSubmitRouteImport
      parentRoute: typeof TLeagueRoute
    }
    '/t/$league/matches': {
      id: '/t/$league/matches'
      path: '/matches'
      fullPath: '/t/$league/matches'
      preLoaderRoute: typeof TLeagueMatchesRouteImport
      parentRoute: typeof TLeagueRoute
    }
    '/t/$league/leaderboard': {
      id: '/t/$league/leaderboard'
      path: '/leaderboard'
      fullPath: '/t/$league/leaderboard'
      preLoaderRoute: typeof TLeagueLeaderboardRouteImport
      parentRoute: typeof TLeagueRoute
    }
    '/t/$league/match/$matchId/edit': {
      id: '/t/$league/match/$matchId/edit'
      path: '/match/$matchId/edit'
      fullPath: '/t/$league/match/$matchId/edit'
      preLoaderRoute: typeof TLeagueMatchMatchIdEditRouteImport
      parentRoute: typeof TLeagueRoute
    }
  }
}

interface TLeagueRouteChildren {
  TLeagueLeaderboardRoute: typeof TLeagueLeaderboardRoute
  TLeagueMatchesRoute: typeof TLeagueMatchesRoute
  TLeagueSubmitRoute: typeof TLeagueSubmitRoute
  TLeagueMatchMatchIdEditRoute: typeof TLeagueMatchMatchIdEditRoute
}

const TLeagueRouteChildren: TLeagueRouteChildren = {
  TLeagueLeaderboardRoute: TLeagueLeaderboardRoute,
  TLeagueMatchesRoute: TLeagueMatchesRoute,
  TLeagueSubmitRoute: TLeagueSubmitRoute,
  TLeagueMatchMatchIdEditRoute: TLeagueMatchMatchIdEditRoute,
}

const TLeagueRouteWithChildren =
  TLeagueRoute._addFileChildren(TLeagueRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LeaguesRoute: LeaguesRoute,
  LoginRoute: LoginRoute,
  TLeagueRoute: TLeagueRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
